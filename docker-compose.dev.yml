version: '3.8'

services:
  mothership:
    build:
      context: .
      dockerfile: Dockerfile.server
    ports:
      - "${MOTHERSHIP_PORT:-7523}:7523"
    environment:
      - MOTHERSHIP_PORT=7523
      - RUST_LOG=${RUST_LOG:-debug}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_SECRET=${ADMIN_SECRET}
      # OAuth configuration
      - OAUTH_ENABLED=true
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - OAUTH_BASE_URL=${OAUTH_BASE_URL:-http://localhost:7523}
      # Feature flags
      - WEBSOCKET_SYNC_ENABLED=true
      - CHAT_ENABLED=true
      - FILE_UPLOADS_ENABLED=true
      - CLI_DISTRIBUTION_ENABLED=true
    env_file:
      - .env
    volumes:
      - .:/app
      - target:/app/target
      - cargo_registry:/usr/local/cargo/registry
    command: ["cargo", "watch", "-x", "run"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:7523/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mothership
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  target:
  cargo_registry: 