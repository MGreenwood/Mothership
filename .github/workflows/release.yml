name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: mothership-linux-x64.tar.gz
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: mothership-linux-arm64.tar.gz
          - target: x86_64-apple-darwin
            os: macos-latest
            name: mothership-macos-x64.tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            name: mothership-macos-arm64.tar.gz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: mothership-windows-x64.zip
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
        
    - name: Configure cross-compilation
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
        
    - name: Build CLI
      run: cargo build --release --bin mothership --target ${{ matrix.target }}
      env:
        SQLX_OFFLINE: true
        
    - name: Build Daemon
      run: cargo build --release --bin mothership-daemon --target ${{ matrix.target }}
      env:
        SQLX_OFFLINE: true
        
    - name: Create package (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir package
        cp target/${{ matrix.target }}/release/mothership package/
        cp target/${{ matrix.target }}/release/mothership-daemon package/
        cp README.md package/
        cp install.sh package/
        cd package
        tar -czf ../${{ matrix.name }} *
        
    - name: Create package (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir package
        cp target/${{ matrix.target }}/release/mothership.exe package/
        cp target/${{ matrix.target }}/release/mothership-daemon.exe package/
        cp README.md package/
        cp install.ps1 package/
        cd package
        Compress-Archive -Path * -DestinationPath ../${{ matrix.name }}
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: ${{ matrix.name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*/*
        generate_release_notes: true
        body: |
          ## ðŸš€ Installation
          
          ### One-liner install (Recommended)
          
          **macOS/Linux:**
          ```bash
          curl -sSL https://install.mothership.dev | bash
          ```
          
          **Windows:**
          ```powershell
          irm https://install.mothership.dev/windows | iex
          ```
          
          ### Manual install with Cargo
          ```bash
          cargo install mothership-cli
          cargo install mothership-daemon
          ```
          
          ### Download binaries
          Download the appropriate package for your platform from the assets below.
          
          ## ðŸŽ¯ Quick Start
          
          ```bash
          # Authenticate
          mothership auth
          
          # Deploy a project
          cd your-project
          mothership deploy
          
          # Start real-time collaboration
          mothership beam "your-project"
          ```
          
          ## ðŸ“š Documentation
          
          - [GitHub Repository](https://github.com/your-org/mothership)
          - [Full Documentation](https://docs.mothership.dev)
          - [Discord Community](https://discord.gg/mothership)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 